<?xml version="1.0"?>
<tool name="ObjectSpace Upload" id="objspc_load">
    <description>ObjectSpace uploader</description>
    <requirements>
        <container type="docker">ubuntu</container>
    </requirements>
    <command interpreter="python">$script_file</command>
    <inputs>
        <param name="infile" type="data"/>
        <param name="f_name" size="90" type="text" label="File Name" optional="True"/>
        <param name="f_type" size="90" type="text" label="File Type" optional="True"/>
        <repeat name="annotations" title="Annotations">
			<param name="name" type="text" size="90" label="Name"/>
			<param name="value" type="text" size="90" label="Value"/>
		</repeat>
    </inputs>
    <outputs>
		<data name="output" format="txt"/>
    </outputs>
    <configfiles>
        	<configfile name="script_file"><![CDATA[#!/usr/bin/env python

import sys
import json
import urllib2
import urllib

data = {
	"@context" : "http://purl.org/cgmeta/",
	"@id" : "$infile.name".replace(" ", "_"),
	"@type" : {
		"@id" : "$infile.dataset.extension"
	}
}

if len("$f_name"):
	data["@id"] = galaxy.util.restore_text("$f_name")

if len("$f_type"):
	data["@type"] = { "@id" : galaxy.util.restore_text("$f_type") }


#for $a in $annotations:
try:
	value = json.loads(galaxy.util.restore_text(a.value))
except ValueError:
	value = galaxy.util.restore_text(a.value)
data[galaxy.util.restore_text(a.name)] = galaxy.util.restore_text(a.value)
#end for

meta_txt = json.dumps(data)

handle = urllib2.urlopen("http://localhost:9999/import", urllib.urlencode( { 'localpath' : '$infile', 'meta' : meta_txt} ))

out_txt = handle.read()
out = json.loads(out_txt)

if 'error' in out:
	sys.stderr.write(out['error'])
else:
	ohandle = open("$output", "w")
	ohandle.write(out["result"])
	ohandle.close()

]]>
</configfile>
</configfiles>
</tool>
