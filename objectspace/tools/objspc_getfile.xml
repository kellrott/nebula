<?xml version="1.0"?>
<tool name="ObjectSpace Get File" id="objspace_getfile">
    <description>ObjectSpace GetFile</description>
    <requirements>
        <container type="docker">ubuntu</container>
    </requirements>
    <command interpreter="python">$script_file</command>
    <inputs>
        <param name="server" type="text" size="100" label="Server">
            <sanitizer>
                <valid initial="string.printable"/>
            </sanitizer>
        </param>
        <param name="item_id" type="text" size="50" label="Item ID">
            <sanitizer>
                <valid initial="string.printable"/>
            </sanitizer>
        </param>
    </inputs>
    <outputs>
        <data name="output" format="auto"/>
    </outputs>
    <configfiles>
        <configfile name="script_file"><![CDATA[#!/usr/bin/env python

import sys
import json
import urllib2
import urllib
import os

server = """$server"""
out_file = """$output"""
item_id =  """item_id"""

handle = urllib2.urlopen( server + "/file/", urllib.urlencode( {'cmd' : 'find_one', 'query' : query} ))
out_txt = handle.read()
print out_txt
meta = json.loads(out_txt)

found = False

if 'filePath' in meta:
    paths = meta["filePath"]
if isinstance(paths, basestring):
    paths = [paths]
    for p in paths:
        if os.path.exists(p):
            if os.path.exists(out_file):
                os.unlink(out_file)
                os.symlink(p, out_file)
                found = True
                break

if 'fileURL' in meta:
    paths = meta["filePath"]
if isinstance(paths, basestring):
    paths = [paths]
    urllib.urlretrieve(paths[0], out_file)
    found = True

]]>
        </configfile>
    </configfiles>
</tool>
