# -*- mode: ruby -*-
# vi: set ft=ruby :

# cribbed from http://blog.cloudera.com/blog/2013/04/how-to-use-vagrant-to-set-up-a-virtual-hadoop-cluster/
 
$master_script = <<SCRIPT
#!/bin/bash
cat > /etc/hosts <<EOF
127.0.0.1       localhost
 
# The following lines are desirable for IPv6 capable hosts
::1     ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters

10.211.55.100   vm-cluster-master 
10.211.55.101   vm-cluster-node1
10.211.55.102   vm-cluster-node2
10.211.55.103   vm-cluster-node3
10.211.55.104   vm-cluster-node4
10.211.55.105   vm-cluster-node5
EOF

cat > /etc/security/limits.conf <<EOF
* soft nofile 8192
* hard nofile 8192
EOF

sudo apt-get install software-properties-common
apt-add-repository -y ppa:ansible/ansible
apt-get update
apt-get install curl ansible -y
SCRIPT
 
$slave_script = <<SCRIPT
cat > /etc/hosts <<EOF
127.0.0.1       localhost
 
# The following lines are desirable for IPv6 capable hosts
::1     ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters

10.211.55.100   vm-cluster-master 
10.211.55.101   vm-cluster-node1
10.211.55.102   vm-cluster-node2
10.211.55.103   vm-cluster-node3
10.211.55.104   vm-cluster-node4
10.211.55.105   vm-cluster-node5
EOF

cat > /etc/security/limits.conf <<EOF
* soft nofile 8192
* hard nofile 8192
EOF

SCRIPT

 
Vagrant.configure("2") do |config|
 
  config.ssh.insert_key = false
  #config.ssh.private_key_path = File.expand_path("../id_rsa.vagrant", __FILE__)
  #config.ssh.forward_agent = true
  #config.ssh.username = "root"

  config.vm.define :master do |master|
    master.vm.box = "ubuntu/trusty64"
    master.vm.provider "vmware_fusion" do |v|
      v.vmx["memsize"]  = "4096"
    end
    master.vm.provider :virtualbox do |v|
      v.name = "vm-cluster-master"
      v.customize ["modifyvm", :id, "--memory", "4096"]
    end
    master.vm.network :private_network, ip: "10.211.55.100"
    master.vm.network "forwarded_port", guest: 5050, host: 5050
    master.vm.network "forwarded_port", guest: 8081, host: 8081
    master.vm.hostname = "vm-cluster-master"
    master.vm.provision :shell, :inline => $master_script
  end

  config.vm.define :slave1 do |slave1|
    slave1.vm.box = "ubuntu/trusty64"
    slave1.vm.provider "vmware_fusion" do |v|
      v.vmx["memsize"]  = "3120"
    end
    slave1.vm.provider :virtualbox do |v|
      v.name = "vm-cluster-node1"
      v.customize ["modifyvm", :id, "--memory", "5120"]
    end
    slave1.vm.network :private_network, ip: "10.211.55.101"
    slave1.vm.hostname = "vm-cluster-node1"
    slave1.vm.provision :shell, :inline => $slave_script
  end
 
  config.vm.define :slave2 do |slave2|
    slave2.vm.box = "ubuntu/trusty64"
    slave2.vm.provider "vmware_fusion" do |v|
      v.vmx["memsize"]  = "3120"
    end
    slave2.vm.provider :virtualbox do |v|
      v.name = "vm-cluster-node2"
      v.customize ["modifyvm", :id, "--memory", "5120"]
    end
    slave2.vm.network :private_network, ip: "10.211.55.102"
    slave2.vm.hostname = "vm-cluster-node2"
    slave2.vm.provision :shell, :inline => $slave_script
  end
  
end